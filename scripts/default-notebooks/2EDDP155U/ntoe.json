%angular

<script type="text/javascript">

function updateNotebookList() {

  var notebooks = angular.element($('#notebooks'));
  var scope = notebooks.scope();

  var xmlHttp = new XMLHttpRequest();
  xmlHttp.open( "GET", "api/notebook", false );
  xmlHttp.send( null );
  var jsonNotebooks = JSON.parse(xmlHttp.responseText).body;

  scope.notebooks = jsonNotebooks;

  window.setTimeout(function() {
    notebooks.triggerHandler('input');
  }, 100);

  return jsonNotebooks;
}

function extractSparkCode(notebook) {
    if (!notebook || !notebook["paragraphs"])
      return "emtpy: no source code inside!";

    // -- extract code paragraph by paragraph

    var script =
"//--------------------------------------------------------\n" +
"// Notebook Name: " +  notebook["name"] + "\n" +
"// Id: " + notebook["id"] + "\n" +
"// Notebook URI: /#/notebook/" + notebook["id"] + "\n" +
"//--------------------------------------------------------\n\n\n";

    notebook["paragraphs"].forEach(function(item) {
      var editorMode = item["config"]["editorMode"] || "";
      if (editorMode.contains("scala")) {
          script +=
"// --\n" +
"// TITLE: " + (item["title"] ? item["title"] : "NO TITLE GIVEN") + "\n" +
"// @ " + item["dateCreated"] + ", updated on " + item["dateUpdated"] + "\n" +
"// --\n\n" +
(item["text"] ? item["text"] : "// No source code found!") + "\n\n";
        }
    });

    return script;
}

function displaySource() {

  var notebookId = angular.element($('#notebookId'));
  var notebookSource = angular.element($('#notebookSource'));
  var script = angular.element($('#scalaScript'));

  var id = notebookId.val();

  notebookSource.val("");
  script.val("");

  if (!id) {
    // do something "default" if we have no ID specified (!)

  } else {
    var xmlHttp = new XMLHttpRequest();
    xmlHttp.open( "GET", "api/notebook/" + id, false );
    xmlHttp.send( null );
    var notebook = JSON.parse(xmlHttp.responseText).body;

    notebookSource.val(JSON.stringify(notebook, null, 2));
    script.val(extractSparkCode(notebook));
  }

  window.setTimeout(function() {
    notebookSource.triggerHandler('input');
    script.triggerHandler('input');
  }, 100);

}

</script>

<div id="mainApp" ng-init="notebooks=updateNotebookList()">

  <table border="0" width="100%" style="border-spacing: 6px; border-collapse:separate;">

    <tr style="border-collapse:separate; padding:0;">

      <td>
        <select class="form-control" ng-options="n.name for n in notebooks track by n.id" ng-model="notebookId" id="notebooks" style="width: 500px; overflow: hidden; white-space: nowrap; text-overflow:ellipsis;">
          <option value="" style="overflow: hidden;">-- choose a notebook --</option>
        </select>
      </td>

      <td width="100%">
        <button id="btnRefresh" type="submit" class="btn btn-info" onclick="updateNotebookList()">Refresh list!</button>
        <button id="btnGet" type="submit" class="btn btn-success" onclick="displaySource()">Get notebook ...</button>
      </td>

    </tr>

    <tr style="border-collapse:separate; padding:0;">

      <td><code>
      <input id="notebookId" type="text" class="form-control" ng-readonly="true" ng-model="notebookId.id" ng-value="notebookId.id" style="width: 500px;" />
      </td></code>

      <td width="100%">
        <h5>Here and above you can choose a a notebook and "export" its Spark code into the right panel.</h5>
      </td>

    </tr>

    <tr>
      <td><code>
        <textarea id="notebookSource" class="form-control" rows="15" style="width: 500px; background-color: lightblue; font-size: 90%;" ng-readonly="true" ng-model="notebookSource" />
      </code></td>
      <td width="100%"><code>
        <textarea id="scalaScript" class="form-control" rows="15" ng-model="scalaScript"  style="font-size: 90%;" />
      </code></td>
    </tr>

  </table>

</div>

